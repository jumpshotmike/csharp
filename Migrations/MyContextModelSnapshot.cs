// <auto-generated />
using System;
using CSharpBeltExam.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharpBeltExam.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharpBeltExam.Models.Affair", b =>
                {
                    b.Property<int>("AffairId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AffairDate");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("CreatorUserId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<TimeSpan>("Duration");

                    b.Property<TimeSpan>("Time");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("AffairId");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Affairs");
                });

            modelBuilder.Entity("CSharpBeltExam.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CSharpBeltExam.Models.UserAffair", b =>
                {
                    b.Property<int>("UserAffairId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AffairId");

                    b.Property<int>("UserId");

                    b.HasKey("UserAffairId");

                    b.HasIndex("AffairId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersAffairs");
                });

            modelBuilder.Entity("CSharpBeltExam.Models.Affair", b =>
                {
                    b.HasOne("CSharpBeltExam.Models.User", "Creator")
                        .WithMany("CreatedAffairs")
                        .HasForeignKey("CreatorUserId");
                });

            modelBuilder.Entity("CSharpBeltExam.Models.UserAffair", b =>
                {
                    b.HasOne("CSharpBeltExam.Models.Affair", "Affair")
                        .WithMany("ReserveSpot")
                        .HasForeignKey("AffairId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSharpBeltExam.Models.User", "User")
                        .WithMany("Affairs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
